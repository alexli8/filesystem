(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{389:function(e,s,t){"use strict";t.r(s);var o=t(46),r=Object(o.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"eos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eos"}},[e._v("#")]),e._v(" EOS")]),e._v(" "),t("h3",{attrs:{id:"准备工作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[e._v("#")]),e._v(" 准备工作")]),e._v(" "),t("p",[e._v("首先安装docker")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# yum install docker\n# systemctl start docker\n")])])]),t("h3",{attrs:{id:"在docker里运行eos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#在docker里运行eos"}},[e._v("#")]),e._v(" 在docker里运行EOS")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# git clone https://gitlab.cern.ch/eos/eos-docker.git\n# cd eos-docker\n# scripts/start_services.sh -i gitlab-registry.cern.ch/dss/eos:4.8.39 -n 6\n")])])]),t("p",[e._v("要启动一个具有 6 个存储服务器 (FST)、1 个命名空间服务器 (MGM)、1 个消息传递程序 (MQ)、1 个客户端和 1 个 Kerberos KDC 容器的小型实例，只需使用 start_services 脚本即可。")]),e._v(" "),t("p",[e._v("要提供的参数是要与 -i 一起使用的映像的名称以及带有 -n 标志的 FST 容器的数量（默认为 6）。")]),e._v(" "),t("p",[e._v("容器将驻留在同一个网络上，了解并配置为开箱即用。")]),e._v(" "),t("p",[e._v("使用在 MGM 容器中运行的 eos shell CLI 连接到 EOS。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# docker exec -i eos-mgm1 eos\n# EOS Console [root://localhost] |/> whoami\nwhoami\nVirtual Identity: uid=0 (2,99,3,0) gid=0 (99,4,0) [authz:sss] sudo* host=localhost\n# EOS Console [root://localhost] |/> version\nversion\nEOS_INSTANCE=eosdockertest\nEOS_SERVER_VERSION=4.8.39 EOS_SERVER_RELEASE=1\nEOS_CLIENT_VERSION=4.8.39 EOS_CLIENT_RELEASE=1\n# EOS Console [root://localhost] |/> node ls\nnode ls\n┌──────────┬─────────────────────────────────────┬────────────────┬──────────┬────────────┬──────┬──────────┬────────┬────────┬────────────────┬─────┐\n│type      │                             hostport│          geotag│    status│      status│  txgw│ gw-queued│  gw-ntx│ gw-rate│  heartbeatdelta│ nofs│\n└──────────┴─────────────────────────────────────┴────────────────┴──────────┴────────────┴──────┴──────────┴────────┴────────┴────────────────┴─────┘\n nodesview  eos-fst1.eoscluster.cern.ch:1095      docker-test     online           on    off          0       10      120                2     1\n nodesview  eos-fst2.eoscluster.cern.ch:1095      docker-test     online           on    off          0       10      120                2     1\n nodesview  eos-fst3.eoscluster.cern.ch:1095      docker-test     online           on    off          0       10      120                2     1\n nodesview  eos-fst4.eoscluster.cern.ch:1095      docker-test     online           on    off          0       10      120                2     1\n nodesview  eos-fst5.eoscluster.cern.ch:1095      docker-test     online           on    off          0       10      120                2     1\n nodesview  eos-fst6.eoscluster.cern.ch:1095      docker-test     online           on    off          0       10      120                2\n")])])]),t("p",[e._v("可以使用 FUSE 和 KRB5 身份验证将 EOS 挂载到客户端容器。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# docker exec -i eos-cli1 env EOS_MGM_URL=root://eos-mgm1.eoscluster.cern.ch eos # fuse mount /eos\n# docker exec -it eos-cli1 bash\n\n.... trying to create ... /eos\n===> Mountpoint   : /eos\n===> Fuse-Options : max_readahead=131072,max_write=4194304,fsname=eos-mgm1.eoscluster.cern.ch,url=root://eos-mgm1.eoscluster.cern.ch//eos/\n===> fuse readahead        : 1\n===> fuse readahead-window : 1048576\n===> fuse debug            : 0\n===> fuse low-level debug  : 0\n===> fuse log-level        : 5\n===> fuse write-cache      : 1\n===> fuse write-cache-size : 67108864\n===> fuse rm level protect : 1\n===> fuse lazy-open-ro     : 0\n===> fuse lazy-open-rw     : 1\n==== fuse multi-threading  : true\ninfo: successfully mounted EOS [root://eos-mgm1.eoscluster.cern.ch] under /eos\n# [root@testmachine eos-docker]# docker exec -it eos-cli1 bash\n# ls -la /eos/\ntotal 4\ndrwxrwxr-x.  1 root root    0 Jan  1  1970 .\ndrwxr-xr-x. 18 root root 4096 Mar 14 10:16 ..\ndrwxrwxr-x.  1 root root    0 Jan  1  1970 dockertest\n")])])]),t("h3",{attrs:{id:"数据删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据删除"}},[e._v("#")]),e._v(" 数据删除")]),e._v(" "),t("p",[e._v("可以使用 shutdown_services 脚本从系统中删除这些 EOS 容器。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# scripts/shutdown_services.sh\n")])])]),t("h3",{attrs:{id:"镜像仓库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#镜像仓库"}},[e._v("#")]),e._v(" 镜像仓库")]),e._v(" "),t("p",[e._v("可以获得每个自动构建和每个版本的图像，发布映像标有发布版本，常规图像使用其原始管道的构建 ID 进行标记。Docker 镜像可以从项目的注册表中访问。")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("# docker pull gitlab-registry.cern.ch/dss/eos:<tag>\n# docker pull gitlab-registry.cern.ch/dss/eos:206970\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);